# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem              1.0

PortGroup               gitlab 1.0
PortGroup               legacysupport 1.1

# clock_gettime
legacysupport.newest_darwin_requires_legacy 15

categories              devel
license                 BSD
installs_libs           no
universal_variant       no
maintainers             nomaintainer
description             Cross-platform makefile generator
long_description        ${description}
homepage                https://cmake.org
platforms               darwin
gitlab.instance         https://gitlab.kitware.com

gitlab.setup            cmake cmake 3.29.3 v
revision                0
epoch                   1
checksums               rmd160  3483accaf350c702c78d6d7c1c04cfb94ab2b20e \
                        sha256  56f8ae2d0ffcfd885a2051ddf49ed9a5add5e4b8fc591e5f32863e659ea56f98 \
                        size    8592083

compiler.cxx_standard   2017

# see https://trac.macports.org/ticket/59832
legacysupport.redirect_bins cmake ccmake cpack ctest

patchfiles-append       patch-CMakeFindFrameworks.cmake.diff \
                        patch-Source_Modules_FindLibUV.cmake.diff \
                        patch-fix_cxx14_17_checks.diff \
                        patch-fix-system-prefix-path.diff \
                        patch-cmake-leopard-tiger.diff \
                        patch-fix-clock_gettime-test.diff \
                        patch-qt5gui.diff \
                        patch-cmake-cmInstallRuntime-initializer-fix.diff \
                        patch-libuv-legacy-systems.diff \
                        patch-cmakeroot-with-app.diff \
                        patch-remove-homebrew-references.diff

post-patch {
    # copy cmake init file, ready to be patched below
    copy ${filespath}/macports.cmake ${worksrcpath}

    reinplace "s|__PREFIX__|${prefix}|g" \
        ${worksrcpath}/macports.cmake \
        ${worksrcpath}/Modules/Platform/Darwin.cmake \
        ${worksrcpath}/Source/cmSystemTools.cxx

    reinplace "s|__FRAMEWORKS_DIR__|${frameworks_dir}|g" \
        ${worksrcpath}/Modules/CMakeFindFrameworks.cmake

    reinplace "s|__APPLICATIONS_DIR__|${applications_dir}|g" \
        ${worksrcpath}/macports.cmake
}

depends_lib-append      port:curl \
                        port:expat \
                        port:zlib \
                        port:bzip2 \
                        port:libarchive \
                        port:ncurses


# configure is just a shell script that passes directly to bootstrap
configure.cmd           ./bootstrap

# bootstrap takes cmake-style args for the build of the cmake to
# be installed. The args are passed as usual for cmake, after
# "--", so we pass them as post_args
configure.post_args     --

configure.env-append    CMAKE_PREFIX_PATH=${prefix} \
                        CMAKE_INCLUDE_PATH=${prefix}/include/ncurses \
                        CMAKE_LIBRARY_PATH=${prefix}/lib

# https://trac.macports.org/ticket/67943
if {[string match *gcc* ${configure.compiler}]} {
    configure.ldflags-append    -latomic
}

configure.env-append    CMAKE_OSX_DEPLOYMENT_TARGET=${macosx_deployment_target}

if {${configure.sdkroot} eq ""} {
    configure.env-append        SDKROOT=/
}

if {${os.major} < 9} {
    configure.ldflags-append    -Wl,-framework -Wl,ApplicationServices
}

if {${os.arch} eq "i386" && ${os.major} < 10} {
    # Old system headers do some bit shifting on Intel about which newer compilers throw errors:
    # SecKeychain.h:102:46: error: shift expression '(1853123693 << 8)' overflows [-fpermissive]
    configure.cflags-append     -fpermissive
    configure.cxxflags-append   -fpermissive
}

if {${os.major} >= 11 && ${os.major} <= 12} {
    # some functions in xlocale.h are hidden without this define
    # https://trac.macports.org/ticket/60885
    configure.cxxflags-append   -D_DARWIN_C_SOURCE
}

# some deps require CMake for building; use bundled copies
configure.args-append   --docdir=share/doc/cmake \
                        --parallel=${build.jobs} \
                        --init=${worksrcpath}/macports.cmake \
                        --system-libs \
                        --no-qt-gui \
                        --no-system-jsoncpp \
                        --no-system-librhash \
                        --no-system-libuv \
                        --no-system-cppdap

build.post_args         VERBOSE=ON

# clang 3.4 can't build certain parts of the cmake self-testing infrastructure
# https://trac.macports.org/ticket/59782
if {${configure.compiler} eq "macports-clang-3.4"} {
    configure.post_args-append  -DBUILD_TESTING=OFF
} else {
    test.run                yes
    test.target             test
}

if {$subport eq ${name}} {
    # FIXME: Remove help files; disable generation instead?
    post-destroot {
        foreach d [glob ${destroot}${prefix}/share/cmake*/Help/*] {
            ui_info "${subport}: deleting: ${d}"
            delete ${d}
        }
    }

    notes-append "The CMake GUI and Docs are now provided as subports cmake-gui and cmake-docs."
}

subport ${name}-gui {
    PortGroup               qt5 1.0

    description             CMake QT-based GUI
    long_description        ${description}

    depends_lib-append      port:${name}

    configure.args-replace  --no-qt-gui \
                            --qt-gui

    configure.args-append   --qt-qmake=${qt_qmake_cmd}

    post-destroot {
        ui_debug "${subport}: removing files in cmake port"
        foreach f [exec port contents cmake] {
            delete ${destroot}${f}
        }
    }
}

subport ${name}-docs {
    description                 CMake Documentation
    long_description            ${description}

    set py_dot      3.11
    set py_nodot    311

    post-patch {
        reinplace "s|__PYTHON_VERSION_WITH_DOT__|${py_dot}|g" ${worksrcpath}/macports.cmake
    }

    depends_lib-append          port:${name}

    configure.args-append       --mandir=share/man \
                                --sphinx-man \
                                --sphinx-html \
                                --sphinx-build=${prefix}/bin/sphinx-build-${py_dot}

    depends_build-append        port:py${py_nodot}-sphinx \
                                port:py${py_nodot}-sphinxcontrib-applehelp \
                                port:py${py_nodot}-sphinxcontrib-devhelp \
                                port:py${py_nodot}-sphinxcontrib-htmlhelp \
                                port:py${py_nodot}-sphinxcontrib-jsmath \
                                port:py${py_nodot}-sphinxcontrib-qthelp \
                                port:py${py_nodot}-sphinxcontrib-serializinghtml \
                                port:py${py_nodot}-sphinxcontrib-websupport

    post-destroot {
        ui_debug "${subport}: removing files in cmake port"
        foreach f [exec port contents cmake] {
            delete ${destroot}${f}
        }
    }
}

gitlab.livecheck.regex  {([0-9.]+)}

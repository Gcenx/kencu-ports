# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                  1.0
PortGroup                   compiler_blacklist_versions 1.0
PortGroup                   legacysupport 1.1
PortGroup                   meson 1.0
PortGroup                   muniversal 1.0

name                        glib2
conflicts                   glib2-devel
set my_name                 glib
version                     2.78.1
revision                    0
checksums                   rmd160  152c43cbc00aad740d08e9040b11040d68c8e99f \
                            sha256  915bc3d0f8507d650ead3832e2f8fb670fce59aac4d7754a7dab6f1e6fed78b2 \
                            size    5320740

set branch                  [join [lrange [split ${version} .] 0 1] .]
categories                  devel
maintainers                 nomaintainer
license                     LGPL-2+
homepage                    https://wiki.gnome.org/Projects/GLib
dist_subdir                 glib2
distname                    ${my_name}-${version}
use_xz                      yes
use_parallel_build          yes

description                 Library with data structure functions and other constructs
long_description            Glib is a library which includes support routines \
                            for C, such as lists, trees, hashes, memory \
                            allocation, and many other things.

master_sites                gnome:sources/${my_name}/${branch}/

# Disable unexpected download of subprojects
meson.wrap_mode             nodownload

# Needed for clock_gettime
legacysupport.newest_darwin_requires_legacy 15

patchfiles-append           libintl.patch \
                            patch-gio-tests-meson.build.diff \
                            patch-glib_gmem.c.diff \
                            patch-glib_gspawn.c.diff \
                            patch-glib_gunicollate.c.diff \
                            patch-gio_xdgmime_xdgmime.c.diff \
                            patch-get-launchd-dbus-session-address.diff \
                            patch-gmodule-gmodule-dl.c.diff \
                            patch-meson_build-meson_options-appinfo.diff \
                            patch-meson-build-python-path.diff \
                            patch-meson_build-atomic-test-older-clang-versions.diff \
                            universal.patch \
                            patch-glib2-findfolders-before-SL.diff \
                            patch-declarations.diff

platform darwin {
    if {${os.major} < 11} {
        patchfiles-append   patch-gio_gcredentialsprivate.h.diff \
                            patch-gio_gcredentials.c.diff \
                            patch-gio_gsocket.h.diff
    }
}

depends_build-append        port:gettext \
                            bin:xmllint:libxml2 \
                            port:pkgconfig

set py_ver                  3.10
set py_ver_nodot            [string map {. {}} ${py_ver}]

depends_lib-append          port:gettext-runtime \
                            port:libelf \
                            port:libffi \
                            port:libiconv \
                            port:pcre2 \
                            port:python${py_ver_nodot} \
                            port:zlib

# Python only needed for scripts
depends_skip_archcheck-append \
                            python${py_ver_nodot}

compiler.cxx_standard       2011

# - gcocoanotificationbackend.c:115:52: error: array subscript is not an integer
# https://bugzilla.gnome.org/show_bug.cgi?id=697017
compiler.blacklist-append   gcc-3.3 *gcc-4.0 *gcc-4.2 {clang < 600}

# -lresolv is needed at least on Tiger PPC.
#configure.ldflags-append    -lresolv \
#                            -bind_at_load

configure.perl              /usr/bin/perl
configure.python            ${prefix}/bin/python${py_ver}
configure.env-append        PERL_PATH=${configure.perl}

configure.cflags-append     -fstrict-aliasing

# stop excessive warnings
configure.cflags-append     -Wno-deprecated-declarations
configure.objcflags-append  -Wno-deprecated-declarations

configure.args-append       -Ddefault_library=both \
                            -Dlibelf=enabled \
                            -Dlibmount=disabled \
                            -Dwarning_level=0 \
                            -Ddtrace=false

if {${universal_possible} && [variant_isset universal]} {
    foreach my_arch {ppc ppc64 i386 x86_64 arm64} {
        # strip the automatic setting of host, meson does not accept
        set merger_host(${my_arch}) ""
    }
}

post-patch {
    reinplace -W ${worksrcpath} "s|@PYTHON@|${configure.python}|" \
        meson.build

    reinplace -W ${worksrcpath} "s|@PREFIX@|${prefix}|g" \
        gio/xdgmime/xdgmime.c \
        glib/gi18n-lib.h \
        glib/gi18n.h \
        gio/gdbusaddress.c

    reinplace -W ${worksrcpath} "s|data_dirs = \"/usr|data_dirs = \"${prefix}/share:/usr|g" \
        glib/gutils.c

    reinplace -W ${worksrcpath} "s|path = \"/bin|path = \"${prefix}/bin:/bin|g" \
        glib/gutils.c \
        glib/gspawn.c

    # Upstream mixes three variations of Python shebangs, so account for all
    fs-traverse f ${worksrcpath} {
        if {[string match *.py ${f}]} {
            ui_info "patching testpath: ${f}"
            reinplace -q "s|/usr/bin/python3$|${configure.python}|" ${f}
            reinplace -q "s|/usr/bin/env python$|${configure.python}|" ${f}
            reinplace -q "s|/usr/bin/env python3$|${configure.python}|" ${f}
        }
    }
}

build.args-append           --verbose

post-build {
    if {[variant_exists universal] && [variant_isset universal]} {
        set dirs {}
        foreach arch ${universal_archs_to_use} {
            lappend dirs ${workpath}/build-${arch}
        }
    } else {
        set dirs ${workpath}/build
    }
    foreach dir ${dirs} {
        # -lm is spuriously added by meson NYD to some builds (arm64)
        reinplace -q {s| -lm||g}              ${dir}/meson-private/glib-2.0.pc
    }
}

test.args-append            --verbose
test.run                    yes
test.target                 test

post-destroot {
    delete ${destroot}${prefix}/lib/charset.alias

    set docdir ${prefix}/share/doc/${my_name}
    xinstall -d ${destroot}${docdir}
    xinstall -m 0644 -W ${worksrcpath} COPYING NEWS README.md \
        ${destroot}${docdir}
}

platform darwin 8 {
    # https://trac.macports.org/ticket/67307
    configure.cflags-append -D__DARWIN_NON_CANCELABLE=1

    # the @loader_path linkages in the test binaries can't find the dylibs
    configure.args-append   -Dtests=false

    # meson on Tiger cannot use rpaths, so we workaround with this to find dylibs
    foreach my_phase {build test destroot} {
        ${my_phase}.env-append  "DYLD_LIBRARY_PATH=${build_dir}/glib:${build_dir}/gobject:${build_dir}/gio:${build_dir}/gthread:${build_dir}/gmodule"
    }
}

variant quartz conflicts x11 {
    configure.args-append   -Dappinfo_backend=native
}

variant x11 conflicts quartz {
    configure.args-append   -Dappinfo_backend=generic
}

if {![variant_isset quartz]} {
    default_variants +x11
}
if {![variant_isset x11]} {
    default_variants +quartz
}
if {![variant_isset quartz] && ![variant_isset x11]} {
    pre-configure {
        return -code error "Either +x11 or +quartz is required"
    }
}

livecheck.type              gnome
livecheck.name              ${my_name}

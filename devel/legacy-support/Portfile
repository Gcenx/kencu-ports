# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
PortGroup           muniversal 1.0

name                legacy-support
categories          devel
platforms           darwin

maintainers         nomaintainer
license             MIT

description         add missing functionality to legacy OSX versions.
long_description    ${description}

# Primary release version
set release_ver     1.0.4

# Binary compatibility version
set compat_ver      1.0.0

# subport legacy-support {
#     conflicts           legacy-support-devel
#     github.setup        kencu kencu-legacy-support ${release_ver} v
#     revision            1
#     checksums           rmd160  b5d1b0ab3baf42c519bb62055b4721b4de9c3e85 \
#                         sha256  75c0b80f036e559e9aafd51c609b7638cbfdd1a05a05a183e6c0b604e897798e \
#                         size    50744
# }

subport legacy-support {
    conflicts           legacy-support-devel
    github.setup        kencu kencu-legacy-support c4c7418840eb953ddf2a1aa92dd4ba25f87ce4fc
    version             20220120
    revision            0
    livecheck.type      none
checksums           rmd160  559f289bc4b5e095de281a3a8065af4d6907a375 \
                    sha256  417020a198213085d5ae9a1f9600f52fc043fe8d7bf8e48d591fd3ac683e080d \
                    size    51353
    set v_split         [split ${release_ver} .]
    set release_ver     [lindex ${v_split} 0].[lindex ${v_split} 1].99
}

subport legacy-support-devel {
    conflicts           legacy-support
    github.setup        kencu kencu-legacy-support c4c7418840eb953ddf2a1aa92dd4ba25f87ce4fc
    version             20220120
    revision            0
    livecheck.type      none
checksums           rmd160  559f289bc4b5e095de281a3a8065af4d6907a375 \
                    sha256  417020a198213085d5ae9a1f9600f52fc043fe8d7bf8e48d591fd3ac683e080d \
                    size    51353
    set v_split         [split ${release_ver} .]
    set release_ver     [lindex ${v_split} 0].[lindex ${v_split} 1].99
}

use_configure       no

# Until this can be fixed disable parallel builds...
# https://build.macports.org/builders/ports-10.10_x86_64-builder/builds/141962/steps/install-port/logs/stdio
use_parallel_build  no

set max_darwin_reexport 19

build.env-append    CXX=${configure.cxx} \
                    CC=${configure.cc} \
                    PREFIX=${prefix} \
                    "LIPO=/usr/bin/lipo" \
                    PLATFORM=${os.major} \
                    MAX_DARWIN_REEXPORT=${max_darwin_reexport} \
                    SOCURVERSION=${release_ver} \
                    SOCOMPATVERSION=${compat_ver}

destroot.env        PREFIX=${prefix}

if {![info exists universal_possible]} {
    set universal_possible [expr {${os.universal_supported} && [llength ${configure.universal_archs}] >= 2}]
}
if {${universal_possible} && [variant_isset universal]} {
    foreach arch ${universal_archs_supported} {
        lappend merger_build_env(${arch})   "CXXFLAGS=${configure.cxxflags} [muniversal_get_arch_flag ${arch}]" \
                                            "CFLAGS=${configure.cflags} [muniversal_get_arch_flag ${arch}]" \
                                            "LDFLAGS=${configure.ldflags} [muniversal_get_arch_flag ${arch}]" \
                                            "FORCE_ARCH=${arch}"
    }
} else {
    build.env-append                        "CXXFLAGS=${configure.cxxflags} [get_canonical_archflags cxx]" \
                                            "CFLAGS=${configure.cflags} [get_canonical_archflags cc]" \
                                            "LDFLAGS=${configure.ldflags} [get_canonical_archflags ld]" \
                                            "FORCE_ARCH=${build_arch}"
}

test.env            {*}${build.env}
test.run            yes
test.target         test

platform darwin 8 {
    post-destroot {

        # install Tiger-specific fixes

        # slightly modified which command to match behaviour of 10.5+
        copy ${worksrcpath}/tiger_only/bin/which ${destroot}${prefix}/bin/which

    # NB: these copied-in headers for Tiger will overwrite any similarly-named headers
    # that we add to the include folder in legacysupport. We will have to watch for that.

        # add suitable Availability*.h headers for Tiger
        copy ${worksrcpath}/tiger_only/include/Availability.h         ${destroot}${prefix}/include/LegacySupport/
        copy ${worksrcpath}/tiger_only/include/AvailabilityInternal.h ${destroot}${prefix}/include/LegacySupport/

        # copyfile exists in libSystem, just needs the header from 10.5 to work
        copy ${worksrcpath}/tiger_only/include/copyfile.h             ${destroot}${prefix}/include/LegacySupport/
    }
}

# The legacy-support build cannot create the LegacySupportSystem library directly
# on newer systems as the reexport link option to /usr/lib/libSystem.B.dylib
# does not work, due to the file system library cache added in macOS11.
# Fallback to using optool here. Optool also currently not working on arm.
if { ${build_arch} ne "arm64" && ${os.major} > ${max_darwin_reexport} } {
    depends_build-append port:optool
    post-destroot {
        set legSupp   ${prefix}/lib/libMacportsLegacySupport.dylib
        set legSystem ${prefix}/lib/libMacportsLegacySystem.B.dylib
        if {![file exists ${destroot}${legSystem}]} {
            copy ${destroot}${legSupp} ${destroot}${legSystem}
            system "${prefix}/bin/optool install -c reexport -p /usr/lib/libSystem.B.dylib -t ${destroot}${legSystem}"
        } else {
            ui_warn "${destroot}${legSystem} already exists."
        }
    }
}
